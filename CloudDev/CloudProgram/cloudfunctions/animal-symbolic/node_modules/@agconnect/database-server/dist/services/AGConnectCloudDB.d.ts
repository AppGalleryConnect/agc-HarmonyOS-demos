/**
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */
import { CloudDBZone } from "..";
import { AGCClient } from "@agconnect/common-server";
import { CloudDBZoneConfig } from "../query/CloudDBZoneConfig";
import { CloudDBService } from "./CloudDBService";
/**
 * AGConnectCloudDB interface.
 */
export declare class AGConnectCloudDB extends CloudDBService {
    private static agconnectMultiCloudDB;
    private readonly USER_KEY;
    private readonly UID_MAX_SIZE;
    private constructor();
    /**
     * If the AGConnectCloudDB has not been instantiated,
     * the singleton AGConnectCloudDB will be instantiated with AgcClient.
     *
     * @param agcClient client from Agc.
     * @throws AGConnectCloudDBException if agcClient is null.
     */
    static initialize(agcClient: AGCClient): void;
    /**
     * The AGConnectCloudDB is returned if it has been instantiated, else will throw an exception.
     *
     * @returns The singleton AGConnectCloudDB.
     * @throws AGConnectCloudDBException if AGConnectCloudDB has not been instantiated.
     */
    static getInstance(agcClient: AGCClient): AGConnectCloudDB;
    /**
     * open a CloudDBZone - create it if non existing, return its info if already exists.
     *
     * @param zoneConfig the CloudDBZoneConfig which contains the cloudDBZoneName.
     * @returns CloudDBZone.
     * @throws AGConnectCloudDBException if config is null.
     */
    openCloudDBZone(zoneConfig: CloudDBZoneConfig): CloudDBZone;
    /**
     * developers use this API to delete userKey according to userId.
     *
     * @param uid the userId that userKey belongs to.
     * @returns promise with number.
     * @throws AGConnectCloudDBException if uid is invalid.
     */
    executeDeleteUserKey(uid: string): Promise<number>;
}
