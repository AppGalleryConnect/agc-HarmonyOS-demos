"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AGCClient=void 0;var EnvType,Region,error_1=require("../error/error"),error_message_1=require("../error/error-message"),credential_parser_1=require("../credential-service/credential-parser"),common_log_1=require("../log-config/common-log"),configService_1=require("../config/configService"),path_1=__importDefault(require("path"));configService_1.ConfigService.loadCustomConfig(),configService_1.ConfigService.initialLoadServiceConfig("COMMON",path_1.default.join(__dirname,"./../../agconnect-common.json")),configService_1.ConfigService.startPollingTask(),function(e){e[e.BROWSER=0]="BROWSER",e[e.NODE_JS=1]="NODE_JS",e[e.UNKNOWN=2]="UNKNOWN"}(EnvType=EnvType||{}),function(e){e.REGION_CN="CN",e.REGION_RU="RU",e.REGION_SG="SG",e.REGION_DE="DE"}(Region=Region||{});var envValue=function(){return"[object process]"===Object.prototype.toString.call(process)?EnvType.NODE_JS:"object"==typeof globalThis&&globalThis.globalThis===globalThis?EnvType.BROWSER:EnvType.UNKNOWN},AGCClient=function(){function n(e,r){this.name=e,this.credential=r}return n.prototype.getName=function(){return this.name},n.prototype.getCredential=function(){return this.credential},n.initialize=function(e,r,o){if(n.judgeEnv(),common_log_1.logger.info("start initialize"),o&&o!==Region.REGION_CN&&o!==Region.REGION_DE&&o!==Region.REGION_RU&&o!==Region.REGION_SG)throw common_log_1.logger.error("invalid region :"+o),new error_1.AGCError(error_message_1.ErrorCodeConstant.INVALID_REGION);if(n.INSTANCES.has(r=null==r?n.DEFAULT_INSTANCE_NAME:r))throw common_log_1.logger.error("instance already exist :"+r),new error_1.AGCError(error_message_1.ErrorCodeConstant.AGC_CLIENT_EXIST);if(void 0===e)common_log_1.logger.info("credential is undefined, so use default"),e=credential_parser_1.CredentialParser.toCredential();else if(!e)throw common_log_1.logger.error("credential is null"),new error_1.AGCError(error_message_1.ErrorCodeConstant.AGC_CLIENT_CREDENTIAL);common_log_1.logger.info("add instance :"+r),n.INSTANCES.set(r,new n(r,e)),o&&n.overrideRegion(r,o)},n.getInstance=function(e){if(!n.INSTANCES.has(e=void 0===e?n.DEFAULT_INSTANCE_NAME:e))throw new error_1.AGCError(error_message_1.ErrorCodeConstant.AGC_CLIENT_NOT_EXIST);return n.INSTANCES.get(e)},n.overrideRegion=function(e,r){n.getInstance(e).getCredential().setRegion(r)},n.judgeEnv=function(){switch(envValue()){case EnvType.NODE_JS:return void common_log_1.logger.info("env node js");case EnvType.BROWSER:throw common_log_1.logger.error("env browser"),new error_1.AGCError(error_message_1.ErrorCodeConstant.ENV_NOT_NODEJS);case EnvType.UNKNOWN:throw common_log_1.logger.error("env unknown"),new error_1.AGCError(error_message_1.ErrorCodeConstant.ENV_NOT_NODEJS);default:throw common_log_1.logger.error("env unknown default"),new error_1.AGCError(error_message_1.ErrorCodeConstant.ENV_NOT_NODEJS)}},n.INSTANCES=new Map,n.DEFAULT_INSTANCE_NAME="default",n}();exports.AGCClient=AGCClient;