"use strict";
/**
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudDBZoneConfig = void 0;
var CloudDBErrorCode_1 = require("../exception/CloudDBErrorCode");
var AGConnectCloudDBException_1 = require("../exception/AGConnectCloudDBException");
/**
 * CloudDBZone configuration class.
 */
var CloudDBZoneConfig = /** @class */ (function () {
    function CloudDBZoneConfig(zoneName) {
        this.CLOUDDBZONE_NAME_MAX_LENGTH = 20;
        this.NATURAL_STORE_NAME_REG_EXP = /^[a-zA-Z][0-9a-zA-Z]{0,19}$/;
        this.checkCloudDBZoneName(zoneName);
        this.cloudDBZoneName = zoneName;
    }
    /**
     * Get cloudDBZone from CloudDBZone Config.
     *
     * @returns a string of cloudDBZone name.
     */
    CloudDBZoneConfig.prototype.getCloudDBZoneName = function () {
        return this.cloudDBZoneName;
    };
    CloudDBZoneConfig.prototype.checkCloudDBZoneName = function (zoneName) {
        if (!zoneName || zoneName.length > this.CLOUDDBZONE_NAME_MAX_LENGTH || !this.NATURAL_STORE_NAME_REG_EXP.test(zoneName)) {
            console.warn(new AGConnectCloudDBException_1.AGConnectCloudDBException(CloudDBErrorCode_1.CloudDBErrorCode.DATABASE_NAME_INVALID).message);
            throw new AGConnectCloudDBException_1.AGConnectCloudDBException(CloudDBErrorCode_1.CloudDBErrorCode.DATABASE_NAME_INVALID);
        }
    };
    return CloudDBZoneConfig;
}());
exports.CloudDBZoneConfig = CloudDBZoneConfig;
